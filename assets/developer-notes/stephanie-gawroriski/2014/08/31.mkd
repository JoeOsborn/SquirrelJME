# 2014/08/31

***DISCLAIMER***: _These notes are from the defunct k8 project which_
_precedes SquirrelJME. The notes for SquirrelJME start on 2016/02/26!_
_The k8 project was effectively a Java SE 8 operating system and as such_
_all of the notes are in the context of that scope. That project is no_
_longer my goal as SquirrelJME is the spiritual successor to it._

## 09:15

My wake time slowly moves forward in time, however I thought of this idea of
how I can make my tokenizer simpler by using inner classes in a set of sort.
An enum cannot be used because it would be static, so I would have to add the
enumerations to a set along with the inner classes. The classes should only
decode a basic set of values, such as comments, literals, words, etc.

## 09:26

Actually a map.

## 09:31

I will just take the input code and produce a raw basic set of tokens which
will then be passed through another decoder which will handle the logic
better.

## 9:40

Brackets used for binary shifts and such will have to be split into multiple
tokens then possibly merged back later. Note that this is only for
extgreater{} and extless. However this only needs to be done for merged
symbols that are extless, extgreater, extless extless, extgreater extgreater,
extgreater extgreater extgreater.

