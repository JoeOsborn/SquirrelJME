# 2016/05/24

## 07:42

I suppose today will be getting a component displayed which would show which
JARs are available and such.

## 10:48

Actually, the icon box although nice and would be natively integrated (such as
on Palm OS) it could just complicate things a bit. If it keep it just to a list
then it can remain simpler.

## 11:27

Thinking about it, I will potentially need a font manager for some platforms.
Well, if a platform does not support a specific set of characters then they
natively cannot be used at all. Simulated support may be possible for these
character sets by utilizing customized drawing, if possible. One thing that
I will need is a font drawing system. Purely non-native UIs (which would be
used for example on game consoles) where all the drawing and event handling is
pretty much purely in software will use the font library. The font drawing
library would have to be small and have the ability to handle the various
scripts and codepoints in Unicode.

## 15:08

Items in the list would have to be list specific items, or the list could not
be smart.

## 15:11

Or instead, lists could just be containers which can only contain labels. The
lists would have a selection interface, and labels would have an icon and
text. Each label could only be placed in a single list for example. Then for
special usage, UI elements could potentially be mapped to items and such by
whatever uses the IU.

## 15:38

I have this idea for a virtual POSIX interface, which when used would create
a mini POSIX compatible environment within Java ME. Java ME 8 is powerful
enough to provide such an interface since NIO was added. Basically it would
use LUI and act as a terminal. The environment would have built in commands
along with a C compiler. The use of such an environment is to allow for
intermediate self hosting ability (so I can run `fossil` inside of the
environment). `fossil` would be the first target goal, so that way I can
commit inside of the environment, which would be handy if for example I am
running on a Palm OS PDA which has no sane POSIX environment nor even a sane
C one. Perhaps possibly later I could implement my own `fossil` and have it
written in Java. Then with an IDE and that, development could be done
regardless of the host system for the most part.

## 16:55

For the native icon set I was thinking about, I can just extend `UIList`. If
in the event there is no native `PIIcons` for a `UIIcons` then the `UIIcons`
can just utilize a `PIList` because the icon set would just be a list anyway.

## 17:09

Labels and menu items have icons and text in common, so they will get
interfaces for that.

