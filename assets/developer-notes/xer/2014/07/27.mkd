# 2014/07/27

***DISCLAIMER***: _These notes are from the defunct k8 project which_
_precedes SquirrelJME. The notes for SquirrelJME start on 2016/02/26!_
_The k8 project was effectively a Java SE 8 operating system and as such_
_all of the notes are in the context of that scope. That project is no_
_longer my goal as SquirrelJME is the spiritual successor to it._

## 01:28

I believe for project version numbers, I will do something Debian-like, I will
do that for most of the stuff since it works quite well. So when creating JAR
files, the JARs will be called (name)_(version).jar. Then I can have an
alternatives like thing that selects the specific JAR file with enabling and
disabling.

## 03:27

The question now is before I proceed, the best course of action to take. I
need the compiler for hairball, since JSON stuff will just not be enough for
scripts. So I will need a compiler. I can use ServiceLoader for providing
language support. I will need a package builder, however that package builder
relies on itself. Dilemma, A requires A to build. So I will need a cheap boot
strapper to build things, so a cheap A that is runnable then run itself to
build itself correctly.

## 04:09

Ok, what I will do is make fauxbld make cheap JAR files and place them in
specific directories. Libraries and applications are pretty much the same
except that they are in two different directories, for sorting purposes.
Applications are unique because they have a main. First thing to do would be
to build a package directory with the faux information, probably a bunch of
cheap files generated by running through the JSON files and attempting low
level extractions from them.

## 07:33

After relaxing for some hours, I have two choices: Sleep or fix my JSON
problem.

## 07:46

Solved my issues, was quite simple actually.

## 07:59

On a side note, bash is slow. Bash takes 5.25s with my current setup while
dash only takes 3.75s, all that bloat.

