# 2016/03/14

## 12:39

Looking at synonyms for _descriptor_.

## 12:41

I suppose one which is not listed could work, perhaps *symbol*.

## 14:31

Actually, something which would be interesting would be to have a virtual
machine with CPU core potential. That is, if the host hardware supports it or
the architecture is sane (such as MIPS, PowerPC, and SPARC) there can be
accelerated execution of a virtual machine. If hardware (or software)
acceleration is not supported, then an emulator could be used instead. An
emulator would have to be used for cross architecture support anyway. However,
I suppose the virtual systems would be very minimal (and likely a clone of
Xen or QEMU). All the hardware would be emulated, while the CPU could be ran
native or just emulated. This would be handy for example to switch to
SquirrelJME and then have some kind of legacy system running. I could even
have a Java interface (NIO channels) to serial/parallel ports and potentially
for VGA screens. So say you get a new device such as the MIPS Creator CI40 and
you have some ancient DOS program from the 80s you still use. You could run
that in a virtual machine and interact with it through Java. Although not as
portable it would allow people to run native code, either at full speed or
with emulation. At least with emulation code would run anywhere at a cost.
There could also be interfaces for (a)synchronous reading and writing of memory
if it is needed for example. It would also be handy for testing and
bootstrapping SquirrelJME so that it can run on its own virtual machine.

## 14:42

Hypothetically it can also be used to support different architectures without
access to the hardware, provided it is a compatible implementation. There
would have to be a hardware configuration however to emulate an existing
system for this to work. I would likely make the virtual machines very
minimal to fit in a small footprint. The virtual machine being ran could also
be managed by the run-time for memory usage and such.

