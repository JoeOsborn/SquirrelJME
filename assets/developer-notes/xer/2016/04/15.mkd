# 2016/04/15

## 08:21

Going to split off part of the constant pool stuff and make those into other
classes so it is a bit cleaner.

## 08:31

Ok so today:

 * Refactor and split about the constant pool entry stuff.
 * Move any gigantic case switch stuff out from `CPOp` and similar (such as
   argument get and a few other things) into another helper class.

## 10:29

Also the other portions of code which directly read arguments can just instead
read the argument table. This would be cleaner.

## 11:22

With arguments, things should be easier to implement.

## 11:24

Which the type determination and the arguments, the operation handler for `new`
is much shorter. It was previously 32 lines, now it is just 5. Well I can just
get it down to a single line statement.

## 14:34

Interesting, this method has only stack entries and no locals.

## 14:53

I can commonize the pushing and popping of operations and reduce much
duplicated code between a number of used operation.

## 15:15

This multi-functional method should be able to shave about 500 lines or so.

## 15:32

This is definitely a much cleaner and more uniform way to perform these
operations.

## 20:47

All of the exceptions that the VM can throw need to have frames.

## 21:42

And now when an exception is caught I can determine where in the virtual
machine internally it was thrown so to speak.

