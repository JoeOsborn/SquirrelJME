# 2016/06/17

## 10:32

Still no electric, running on battery power. Luckily for me I can mount my PDA
and sync against it so that the most up top date code is on my PDA. I have
about an hour of battery. So my plan yesterday was no refactor the ZIP code
so that it is a bit faster and does not rely on the structures and the reading
in general is a bit faster and more multi-threaded friendly.

## 10:53

Hopefully the more direct approach will end up being faster and not require
all the structure information to be in memory, since it is only needed when
the structures need to be read.

## 10:57

Actually my battery is getting a bit low. In the future when there are native
SquirrelJME ports, I could quite literally work on this on my PDA despite it
being small. The PDA although slower uses far less battery. However, that would
be months away. I suppose what I can do is think of the PVM JVM. Once all
the interfaces are setup, I can cleanly determine the best route to take when
it comes to native code generation. I will have to fixup and change the
java-byte-code behavior so that it is exactly as is represented in the byte
code. Rather than adjusting or performing slight optimization, being exact
will allow me to more easily map code when the PVM JVM needs to change all
the class references to process prefixed ones. One problem of the PVM JVM is
that it will cost much memory.

## 14:38

And the electric is back again, so I do not have to worry about battery life
as much anymore.

