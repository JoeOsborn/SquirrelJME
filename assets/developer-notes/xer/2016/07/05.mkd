# 2016/07/05

## 13:09

The JITTarget can use a simplified output which is matched to operating system
packages. Instead of just say `powerpc32.linux.generic` the targets will
essentially be `powerpc-32,big.linux.generic`. However since some packages
might support some bits and others not, there would essentially be a list of
stuff rather than just having single entries.

## 17:06

I looked at my site through my mobile phone, it renders the blueish color as a
kind of grayscale. This looked quite nice, so I believe I will switch color
schemes.

## 19:38

Ok, so the `JIT` is to be completley decoupled from the `JITOutput` so the
`JIT` will be `final` and the generation logic will be placed in `JITOutput`
instead.

## 19:44

This means that the `JITOutputFactory` being associated with an operating
system and architecture in the constructor makes no sense at all.

## 19:53

Using the configuration greatly simplifies finding a supporting output
factory.

## 20:15

This means the native code generators are decoupled from the JIT which means
the JITCPUVariant does not need to exist. However, native code generators could
still be part of the output in a way. I could very literally have virtualized
`JITOutput` which either call one which generates instructions or calls another
`JITOutput`. So there would need to be some kind of back bridging of sorts.
Or the native code generators could be completely standalone as a kind of
interface which is bound to some kind of output.

## 20:17

The triplet for the Nintendo 64 would be `mips-64+iii,big.nintendo64.64drive`.

## 22:00

Looking at a project written by someone else, they made a clone of a 2D kind
of version of Minecraft. This would be interesting. However you would play as
a squirrel and can go through caves and such. Lighting can be based on visible
light and then heat. If there is enough visible light then heat-vision would
not be used. Otherwise in very dark caves heat-vision would be used. Since you
have no tools, heat would be very important in dark areas. Anything warm
blooded generates heat so basically in a very small area you would be able to
see the ground (as heat) from your own body heat. Very hot objects in
heat-vision mode would be white to pink to red while very cold objects would
be purple to blue to green. Yellow and orange could be in the middle so to
speak. You would see yourself in heat-vision mode as a heat-colored blob. So
bats flying around would for example also be heat colored sprites. Then they
would light up with heat other areas. On the surface during the day, heat and
visible light could be generated. At night the heat goes away and is just a
varying amount of visible light (depending on the moon phase). The deeper you
go into the Earth, the more heat is generated from blocks (due to pressure).
So after a certain point deep enough you would be able to see where you are
going due to the latent heat. Heat could transfer over all block types
depending on their heat conductivity. Lava for example would be very hot. Any
bodies of water would also match the temperature that they are. When it comes
to sunlight the ground will heat up from the sunlight (assuming it is not
in the shade). If the ground is thin then heat from the sun could light up
the ceiling. Veins of lava that are in cave systems or in the ground can
create local hotspots of heat for the most part. I just need to make sure 
that squirrels can actually see heat (infra red). They do have good vision.
Squirrels can actually see in color too. So I could match a color scheme
similar to that. They can see blue and yellow, but any other colors are as good
as invisible.

## 22:21

Well, Squirrels cannot see heat at all so they would essentially be running
around a cave in the dark.


