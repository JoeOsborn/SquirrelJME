# 2016/07/21

## 13:57

The OS specific support should not contain the JIT code but only the OS
support code.

## 13:58

The question is though, when it comes to the OS initialization (so the JVM can
be initialized), do I call a static method or create an instance? Static might
be best despite everything not being potentially fully initialized. It can be
thought up of as a kind of early bootstrap to jump into Java code, where that
Java code then performs more initialization. So this means that JVM main entry
points cannot rely on objects and must use lots of JIT magic to perform
logic and such.

## 14:31

Did not figure I would be writing C code again.

## 18:21

I should add more things to the readme, such as my goals.

## 18:23

Now my C code compiles without errors and feels more typesafe.

## 22:26

Need a way to setup good string placement and possible binding the generated
C code, that is run-time linking using pointers. For fields and methods I
will need a basic table of them for the most part. They are very similar though
although methods have code associated with them also.

