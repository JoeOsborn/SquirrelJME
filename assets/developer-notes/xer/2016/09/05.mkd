# 2016/09/05

## 09:57

One thing that I will need to handle in the virtual file system manager would
be to have access to directories via perhaps listing contents. For example if
one mounts to `/foo` then a content listing of `/` should list `foo` even if
there is a virtual handler which is mounted to `/` and has no actual files
associated with it.

## 11:48

Thinking about Squirrel Quarrel, an 80x25 terminal could give a 40x25 tile view
of the game (if 2x1 characters are used per 32x32 tiles) which would equate to
a resolution of 1280x800. However the original game uses only 640x480 with an
actual viewable area of 640x352 so that means I can use 8x14 per 32x32 tile.
Well actually that seems wrong. The normal game view is 20x11. Which means
that a block of 4x2 characters represents a 32x32 tile. There would also be
3 rows of extra space, so a 80x3 region I can use at the top and/or bottom to
represent information. I would likely need all of the tile space to represent
the terrain units are on along with some basic information about a unit such
as its type and who owns it. For the terrain I can use special characters that
are not ASCII to represent what is happening. A cliff can be represented as
`^`, water as `~`, rocky ground at `.`, and buildable ground as ` `. Although
cliffs could just be represented using box drawing characters so to speak.

## 12:25

`INVOKEINTERFACE` has a _count_ parameter which must not be zero, however it
does not even specificy how it is used at all. However looking at old
information it is just the number of entries that are used on the stack for
the invocation. Since that is already known via the method handle it is rather
pointless. However, when I write a Java compiler I will need to calculate it
just in case.

