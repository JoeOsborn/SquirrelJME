# 2016/09/11

## 10:02

For some reason, cldc compact is not being picked up by the stream reader.

## 10:06

Actually, there appears to be a logical error in the ZIP stream reader, which
I fixed. It was failing on the max supported extract version (2.0) due to the
greater than or equal sign.

## 12:15

The namespace browser would probably be best if it were to be given output
streams for namespaces. This would be compared to having it in another class
as before, while the functionality would be similar.

## 12:17

it would also be best if the JIT just wrote to `OutputStream`s instead of just
juggling the potential for it to be written to memory or having specific cache
forms. This simplifies, plus the resulting namespace cache could be directly
executable anyway.

## 12:34

I could also probably have a better content management system for the basic
output compared to the mess that the generic output was.

## 12:38

I should also have different areas for classes and resources. Before I used
a type flag. But with two different tables I can have the constraints for
classes be different than that of resources.

## 15:45

Extended data output stream can use align, since previously I have used it
much in the generic writer.

## 18:00

When the launcher/JVM is created it can specify the terminal and LUI interface
to use for sub-processes. This way they use the same class which just forwards
calls to an implementation that can handle switching between applications.

## 18:44

One thing I can do is have an interface similar to `TerminalScreen` for the
LUI code except have it for characters and such. It would be best if it became
a managed set of character buffers.

## 19:03

Basically it can hide the characters internally and instead provide reading
from it as a `CharSequence`. Then `toString()` can be cached so that if any
text does not change at all, it does not waste memory.

## 21:00

I was interrupted and now I am back.

