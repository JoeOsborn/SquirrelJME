import cc.squirreljme.plugin.swm.JavaMEMidletType
import cc.squirreljme.plugin.swm.JavaMEStandard

description = "This contains the standard MIDP Limited Capability Device " +
 "User Interface which uses graphical text, widgets, and images to interact " +
 "with the user. Unlike the MEEP Line User Interface, this requires a " +
 "much more capable graphical system."
version = rootProject.version

squirreljme
{
	javaDocErrorCode = "EB"
	swmType = JavaMEMidletType.API
	swmName = "LCD UI"
	swmVendor = "Stephanie Gawroriski"
	definedStandards += new JavaMEStandard("microedition.lcdui;;")
	tags += "graphics"
	tags += "j2me"
	
	// ProGuard thinks this method has no side effects so it removes this
	// however, we really do need to keep this method but we can obfuscate it
	proGuardOptions += ["-keepclassmembers,allowobfuscation",
		"class", "*", "{",
			"javax.microedition.lcdui.__CommonWidget__\$__CommonState__",
				"__stateInit", "(",
					"cc.squirreljme.runtime.lcdui.mle.UIBackend",
				")", ";",
		"}"]
	
	// Performing optimizations here breaks MLE callbacks
	proGuardOptions += ["-keep,includecode",
		"class", "javax.microedition.lcdui.__MLEUIThread__", "{",
			"<methods>", ";",
		"}"]
	
	// Keep any class members that are marked as serialized events and do not
	// optimize them
	proGuardOptions += ["-keepclassmembers,includecode",
		"class", "*", "{",
			"@cc.squirreljme.runtime.lcdui.SerializedEvent", "*", ";",
		"}"]
}

dependencies
{
	api project(":modules:cldc-compact")

	api project(":modules:meep-midlet")
	api project(":modules:gcf")
	api project(":modules:io")
	api project(":modules:collections")
}
