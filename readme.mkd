# SquirrelJME

 * Copyright (C) 2013-2017 Steven Gawroriski
   <xer@multiphasicapps.net>
 * Copyright (C) 2013-2017 Multi-Phasic Applications
   <http://multiphasicapps.net/>
 * _Lex_ (The SquirrelJME Mascot) was drawn by...
   * "_Puppenstein_" <http://www.furaffinity.net/user/puppenstein/>
 * Support me on [Patreon](https://www.patreon.com/mpasteven)!

**SquirrelJME** is intended to be a Java ME 8 compatible environment for
strange and many other devices. That is, you would be able to have a Java
environment on a wide range of _Internet of Things_ devices, older computers
(such as the _Amiga_), embedded devices, and mobile devices from old to new.
It intends to be 99.9% compatible with Java ME 8 and older J2ME standards. It
should be able to run a wide range of older J2ME software which would enable
this software to be used for archival purposes.

The source is written in pure Java and is designed to use small amounts of
memory, where simplicity increases operation speed without sacrificing
quality.

Note that Java ME 8 has a Java 7 virtual machine with specific limitations.

## Licenses

 * Source:
   [GNU General Public License, Version 3 or later](license.mkd)
 * Non-Source:
   [Creative Commons CC-BY-SA 4.0](license.mkd)

## Repository

 * [Online repository](http://multiphasicapps.net/)
   ([HTTPS](https://multiphasicapps.net/))
 * SquirrelJME uses `fossil` <http://fossil-scm.org/>.
 * The repository may be cloned with:
   * One of these commands
     * `fossil clone -u http://multiphasicapps.net/ squirreljme.fossil`
     * `fossil clone -u https://multiphasicapps.net/ squirreljme.fossil`
   * `mkdir squireljme`
   * `cd squirreljme`
   * `fossil open ../squirreljme.fossil`
 * Trunk Source Snapshot (`fossil serve` only):
   * [TAR.GZ](/tarball/squirreljme-trunk.tar.gz?uuid=trunk)
   * [ZIP](/zip/squirreljme-trunk.zip?uuid=trunk)
 * Read-Only Mirrors:
   * Bitbucket: <https://bitbucket.org/mpasteven/squirreljme>
   * GitHub: <https://github.com/XerTheSquirrel/SquirrelJME>
   * GitLab: <https://gitlab.com/mpasteven/SquirrelJME>
   * Tor: <http://squirrelzarhffxz.onion/>
     (`fossil clone -u http://squirrelzarhffxz.onion/ squirreljme.fossil`)

## Documents

 * [Code of Conduct](code-of-conduct.mkd)
 * [Developer Notes](assets/developer-notes/index.mkd)
   (In repository)
   * [Unversioned Notes](/uv/developer-notes/index.mkd)
     (In unversioned space, will be up to date for the current day)
   * [Alternative URL](http://multiphasicapps.net/uv/developer-notes/index.mkd)
     ([HTTPS](https://multiphasicapps.net/uv/developer-notes/index.mkd);
     Links to the main repository, do not follow via Tor use the direct link)
 * [Manual](assets/manual/index.mkd)
 * [Project Scope](scope.mkd)
 * [Why?](assets/manual/user/why.mkd)

## Links

 * Locations where you can get support:
   * [Freenode #squirreljme](ircs://irc.freenode.net:6697/squirreljme)
   * [Mailing List](https://sourceforge.net/p/squirreljme/mailman/)
   * [SourceForge Project](http://www.sourceforge.net/projects/squirreljme)
 * Front facing social media:
   * [Mastodon](https://mastodon.social/@XerTheSquirrel)
   * [Twitter](https://twitter.com/MultiPhasicApps)
   * [YouTube](https://www.youtube.com/channel/UCbmC7qQjeXUEUyE5XfDX5RA)
 * Personal Accounts (If you wish to contact me this way)
   * [FurAffinity](https://www.furaffinity.net/user/mpasteven/)
   * [GitHub](https://github.com/mpasteven/)
   * [LinkedIn](https://www.linkedin.com/in/steven-gawroriski/)

## Goals

 * _To be self-hosting_ - it can build itself while running on itself, provided
   there is a filesystem and enough memory.
 * _To be small_ - Smaller programs are easier to maintain and are usually
   simpler.
 * _To be fast_ - With the potential of AOT/JIT, systems that do not normally
   have a port of an existing virtual machine will usually only have an
   interpreter.
 * _To be compatible_ - So that existing Java ME 8 applications can run on this
   virtual machine, along with J2ME applications when required.
 * _To compile once and run anywhere_ - Current and up to date Java
   implementations are limited only to a few select systems (_Solaris_,
   _Linux_, _BSD_, _Mac OS X_, and _Windows_). Java ME 8 as of this writing
   only supports the *FRDM-K64F* and the *Raspberry Pi*. There are multitudes
   of devices that support **J2ME**, however that is horribly out of date when
   compared with the Java that is used today (**J2ME** is equal to Java 1.4
   which was released in _2002_).

## Donations

You may donate to SquirrelJME to which would be used by the author to keep the
web server online, the purchasing of new hardware/software, and for the
purchasing of food items for consumption.

 * [Patreon](https://www.patreon.com/mpasteven)
 * BitCoin (**BTC/XBT**): [`13UYwi2zuQd8NLhjyu1BA7a8NWktDotmq4`](
   bitcoin:13UYwi2zuQd8NLhjyu1BA7a8NWktDotmq4)
 * Ethereum (**ETH**): [`0x9738136f7EcB11d554Ef767704F62216a646e0AB`](
   ethereum:0x9738136f7EcB11d554Ef767704F62216a646e0AB)
 * LiteCoin (**LTC**): [`LKytAQcbPyox75uYMKo1NH1w2k1SqBaELi`](
   litecoin:LKytAQcbPyox75uYMKo1NH1w2k1SqBaELi)
 * [FreedomSponsors](https://freedomsponsors.org/user/mpasteven/)

## Important Statements

***JAVA AND ALL OTHER RELATED TRADEMARKS AND COPYRIGHTS ARE OWNED BY ORACLE
CORPORATION <http://www.oracle.com/>.***

***SQUIRRELJME IS NEITHER PRODUCED NOR ENDORSED BY ORACLE CORPORATION.***

***ALL SOURCE CODE IS WRITTEN BY MYSELF WITH FUNCTIONALITY DETERMINED BY THE
DOCUMENTED APIS AND RUN-TIME BEHAVIOR. I HAVE NOT LOOKED AT THE SOURCE CODE FOR
OTHER IMPLEMENTATIONS, NEITHER FREE SOFTWARE NOR PROPRIETARY IMPLEMENTATIONS.
ESSENTIALLY SQUIRRELJME IS A CLEAN-ROOM IMPLEMENTATION OF THE DESIGN OF JAVA
ME 8. THE IMPLEMENTATIONS OF THE JAVA ME 8
APIS AND ASSOCIATED JSRS/JEPS IS CONSIDERED BY MYSELF TO BE IN THE FAIR USE
(AND IT ALSO HELPS THE JAVA ECOSYSTEM BY PERMITTING IT TO RUN IN MORE PLACES
WHERE IT IS NOT SUPPORTED BY ORACLE).***

***THIS SOFTWARE IS INCOMPLETE AND IN ITS CURRENT STATE IS NOT CURRENTLY
100% COMPATIBLE WITH JAVA ME 8. THERE ARE CURRENTLY NO RELEASED VERSIONS OF
THIS SOFTWARE. AS SUCH THE FIRST RELEASE WILL BE WHEN IT IS COMPATIBLE SO AS TO
NOT VIOLATE POTENTIAL LICENSES, AND IF POSSIBLE BE VERIFIED WITH ANY
APPLICABLE TCKS (SO IT WOULD BE AN "OFFICIAL" IMPLEMENTATION).***


